package hibernate;

import model.Transport.Checkpoint;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.NoResultException;
import javax.persistence.Query;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Root;
import java.util.List;

public class CheckpointHib {
    EntityManager entityManager = null;
    EntityManagerFactory entityManagerFactory = null;

    public CheckpointHib(EntityManagerFactory entityManagerFactory) {
        this.entityManagerFactory = entityManagerFactory;
    }

    public void createCheckpoint(Checkpoint checkpoint) {
        entityManager = entityManagerFactory.createEntityManager();
        try {
            entityManager.getTransaction().begin();
            entityManager.merge(checkpoint);
            entityManager.getTransaction().commit();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (entityManager != null) entityManager.close();
        }
    }

    public void updateCheckpoint(Checkpoint checkpoint) {
        entityManager = entityManagerFactory.createEntityManager();
        try {
            entityManager.getTransaction().begin();
            entityManager.merge(checkpoint);
            entityManager.getTransaction().commit();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (entityManager != null) entityManager.close();
        }
    }

    public void deleteCheckpoint(Checkpoint checkpoint) {
        entityManager = entityManagerFactory.createEntityManager();
        try {
            entityManager.getTransaction().begin();
            entityManager.remove(entityManager.find(Checkpoint.class, checkpoint.getId()));
            entityManager.getTransaction().commit();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (entityManager != null) entityManager.close();
        }
    }

    public List<Checkpoint> getAllCheckpoints() {
        entityManager = entityManagerFactory.createEntityManager();
        CriteriaBuilder criteriaBuilder = entityManager.getCriteriaBuilder();
        CriteriaQuery<Checkpoint> query = criteriaBuilder.createQuery(Checkpoint.class);
        Root<Checkpoint> root = query.from(Checkpoint.class);
        query.select(root);
        Query q;
        try {
            q = entityManager.createQuery(query);
            return q.getResultList();
        } catch (NoResultException e) {
            return null;
        }

    }
    public Checkpoint getCheckpointById(int id) {
        entityManager = entityManagerFactory.createEntityManager();
        Checkpoint checkpoint = null;
        try {
            entityManager.getTransaction().begin();
            checkpoint = entityManager.find(Checkpoint.class, id);
            entityManager.getTransaction().commit();
        } catch (Exception e) {
            System.out.println("No such checkpoint by given id");
        }
        return checkpoint;
    }
}
